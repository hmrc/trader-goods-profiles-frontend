# microservice specific routes

->          /hmrc-frontend                                                                  hmrcfrontend.Routes

GET         /                                                                               controllers.IndexController.onPageLoad

GET         /assets/*file                                                                   controllers.Assets.versioned(path="/public", file: Asset)

GET         /language/:lang                                                                 controllers.LanguageSwitchController.switchToLanguage(lang: String)

GET         /refresh-session                                                                controllers.KeepAliveController.keepAlive

GET         /problem/technical-issue                                                        controllers.JourneyRecoveryController.onPageLoad(continueUrl: Option[RedirectUrl] ?= None)

GET         /create-profile/check-your-answers                                              controllers.CyaCreateProfileController.onPageLoad
POST        /create-profile/check-your-answers                                              controllers.CyaCreateProfileController.onSubmit

GET         /account/sign-out-survey                                                        controllers.auth.AuthController.signOut
GET         /account/sign-out                                                               controllers.auth.AuthController.signOutNoSurvey
GET         /account/sign-out-no-session                                                    controllers.auth.AuthController.signOutNoSession
GET         /signed-out                                                                     controllers.auth.SignedOutController.onPageLoad

GET         /problem/unauthorised-sign-in                                                   controllers.UnauthorisedController.onPageLoad

GET         /create-profile/niphl-question                                                  controllers.HasNiphlController.onPageLoadCreate(mode: Mode = NormalMode)
POST        /create-profile/niphl-question                                                  controllers.HasNiphlController.onSubmitCreate(mode: Mode = NormalMode)
GET         /create-profile/niphl-question/check                                            controllers.HasNiphlController.onPageLoadCreate(mode: Mode = CheckMode)
POST        /create-profile/niphl-question/check                                            controllers.HasNiphlController.onSubmitCreate(mode: Mode = CheckMode)

GET         /update-profile/niphl-question                                                  controllers.HasNiphlController.onPageLoadUpdate
POST        /update-profile/niphl-question                                                  controllers.HasNiphlController.onSubmitUpdate

GET         /create-profile/nirms-question                                                  controllers.HasNirmsController.onPageLoadCreate(mode: Mode = NormalMode)
POST        /create-profile/nirms-question                                                  controllers.HasNirmsController.onSubmitCreate(mode: Mode = NormalMode)
GET         /create-profile/nirms-question/check                                            controllers.HasNirmsController.onPageLoadCreate(mode: Mode = CheckMode)
POST        /create-profile/nirms-question/check                                            controllers.HasNirmsController.onSubmitCreate(mode: Mode = CheckMode)

GET         /update-profile/nirms-question                                                  controllers.HasNirmsController.onPageLoadUpdate
POST        /update-profile/nirms-question                                                  controllers.HasNirmsController.onSubmitUpdate

GET         /create-profile/niphl-number                                                    controllers.NiphlNumberController.onPageLoadCreate(mode: Mode = NormalMode)
POST        /create-profile/niphl-number                                                    controllers.NiphlNumberController.onSubmitCreate(mode: Mode = NormalMode)
GET         /create-profile/niphl-number/check                                              controllers.NiphlNumberController.onPageLoadCreate(mode: Mode = CheckMode)
POST        /create-profile/niphl-number/check                                              controllers.NiphlNumberController.onSubmitCreate(mode: Mode = CheckMode)

GET         /update-profile/niphl-number                                                    controllers.NiphlNumberController.onPageLoadUpdate
POST        /update-profile/niphl-number                                                    controllers.NiphlNumberController.onSubmitUpdate

GET         /create-profile/nirms-number                                                    controllers.NirmsNumberController.onPageLoadCreate(mode: Mode = NormalMode)
POST        /create-profile/nirms-number                                                    controllers.NirmsNumberController.onSubmitCreate(mode: Mode = NormalMode)
GET         /create-profile/nirms-number/check                                              controllers.NirmsNumberController.onPageLoadCreate(mode: Mode = CheckMode)
POST        /create-profile/nirms-number/check                                              controllers.NirmsNumberController.onSubmitCreate(mode: Mode = CheckMode)

GET         /update-profile/nirms-number                                                    controllers.NirmsNumberController.onPageLoadUpdate
POST        /update-profile/nirms-number                                                    controllers.NirmsNumberController.onSubmitUpdate

GET         /create-profile/start                                                           controllers.ProfileSetupController.onPageLoad()
POST        /create-profile/start                                                           controllers.ProfileSetupController.onSubmit()

GET         /create-profile/ukims-number                                                    controllers.UkimsNumberController.onPageLoadCreate(mode: Mode = NormalMode)
POST        /create-profile/ukims-number                                                    controllers.UkimsNumberController.onSubmitCreate(mode: Mode = NormalMode)
GET         /create-profile/ukims-number/check                                              controllers.UkimsNumberController.onPageLoadCreate(mode: Mode = CheckMode)
POST        /create-profile/ukims-number/check                                              controllers.UkimsNumberController.onSubmitCreate(mode: Mode = CheckMode)

GET         /update-profile/ukims-number                                                    controllers.UkimsNumberController.onPageLoadUpdate
POST        /update-profile/ukims-number                                                    controllers.UkimsNumberController.onSubmitUpdate

GET         /update-record/:recordId/categorisation/start                                   controllers.CategoryGuidanceController.onPageLoad(recordId: String)
POST        /update-record/:recordId/categorisation/start                                   controllers.CategoryGuidanceController.onSubmit(recordId: String)

GET         /create-record/commodity-code                                                   controllers.CommodityCodeController.onPageLoadCreate(mode: Mode = NormalMode)
POST        /create-record/commodity-code                                                   controllers.CommodityCodeController.onSubmitCreate(mode: Mode = NormalMode)
GET         /create-record/commodity-code/check                                             controllers.CommodityCodeController.onPageLoadCreate(mode: Mode = CheckMode)
POST        /create-record/commodity-code/check                                             controllers.CommodityCodeController.onSubmitCreate(mode: Mode = CheckMode)

GET         /update-record/:recordId/commodity-code                                         controllers.CommodityCodeController.onPageLoadUpdate(mode: Mode = NormalMode, recordId: String)
POST        /update-record/:recordId/commodity-code                                         controllers.CommodityCodeController.onSubmitUpdate(mode: Mode = NormalMode, recordId: String)
GET         /update-record/:recordId/commodity-code/check                                   controllers.CommodityCodeController.onPageLoadUpdate(mode: Mode = CheckMode, recordId: String)
POST        /update-record/:recordId/commodity-code/check                                   controllers.CommodityCodeController.onSubmitUpdate(mode: Mode = CheckMode, recordId: String)

GET         /create-record/country-of-origin                                                controllers.CountryOfOriginController.onPageLoadCreate(mode: Mode = NormalMode)
POST        /create-record/country-of-origin                                                controllers.CountryOfOriginController.onSubmitCreate(mode: Mode = NormalMode)
GET         /create-record/country-of-origin/check                                          controllers.CountryOfOriginController.onPageLoadCreate(mode: Mode = CheckMode)
POST        /create-record/country-of-origin/check                                          controllers.CountryOfOriginController.onSubmitCreate(mode: Mode = CheckMode)

GET         /update-record/:recordId/country-of-origin                                      controllers.CountryOfOriginController.onPageLoadUpdate(mode: Mode = NormalMode, recordId: String)
POST        /update-record/:recordId/country-of-origin                                      controllers.CountryOfOriginController.onSubmitUpdate(mode: Mode = NormalMode, recordId: String)
GET         /update-record/:recordId/country-of-origin/check                                controllers.CountryOfOriginController.onPageLoadUpdate(mode: Mode = CheckMode, recordId: String)
POST        /update-record/:recordId/country-of-origin/check                                controllers.CountryOfOriginController.onSubmitUpdate(mode: Mode = CheckMode, recordId: String)

GET         /homepage                                                                       controllers.HomePageController.onPageLoad()

GET         /create-record/start                                                            controllers.CreateRecordStartController.onPageLoad()
POST        /create-record/start                                                            controllers.CreateRecordStartController.onSubmit()

GET         /create-record/:recordId/success                                                controllers.CreateRecordSuccessController.onPageLoad(recordId: String)

GET         /create-record/goods-description                                                controllers.GoodsDescriptionController.onPageLoadCreate(mode: Mode = NormalMode)
POST        /create-record/goods-description                                                controllers.GoodsDescriptionController.onSubmitCreate(mode: Mode = NormalMode)
GET         /create-record/goods-description/check                                          controllers.GoodsDescriptionController.onPageLoadCreate(mode: Mode = CheckMode)
POST        /create-record/goods-description/check                                          controllers.GoodsDescriptionController.onSubmitCreate(mode: Mode = CheckMode)

GET         /update-record/:recordId/goods-description                                      controllers.GoodsDescriptionController.onPageLoadUpdate(mode: Mode = NormalMode, recordId: String)
POST        /update-record/:recordId/goods-description                                      controllers.GoodsDescriptionController.onSubmitUpdate(mode: Mode = NormalMode, recordId: String)
GET         /update-record/:recordId/goods-description/check                                controllers.GoodsDescriptionController.onPageLoadUpdate(mode: Mode = CheckMode, recordId: String)
POST        /update-record/:recordId/goods-description/check                                controllers.GoodsDescriptionController.onSubmitUpdate(mode: Mode = CheckMode, recordId: String)

GET         /create-record/commodity-code-result                                            controllers.HasCorrectGoodsController.onPageLoadCreate(mode: Mode = NormalMode)
POST        /create-record/commodity-code-result                                            controllers.HasCorrectGoodsController.onSubmitCreate(mode: Mode = NormalMode)
GET         /create-record/commodity-code-result/check                                      controllers.HasCorrectGoodsController.onPageLoadCreate(mode: Mode = CheckMode)
POST        /create-record/commodity-code-result/check                                      controllers.HasCorrectGoodsController.onSubmitCreate(mode: Mode = CheckMode)

GET         /update-record/:recordId/commodity-code-result                                  controllers.HasCorrectGoodsController.onPageLoadUpdate(mode: Mode = NormalMode, recordId: String)
POST        /update-record/:recordId/commodity-code-result                                  controllers.HasCorrectGoodsController.onSubmitUpdate(mode: Mode = NormalMode, recordId: String)
GET         /update-record/:recordId/commodity-code-result/check                            controllers.HasCorrectGoodsController.onPageLoadUpdate(mode: Mode = CheckMode, recordId: String)
POST        /update-record/:recordId/commodity-code-result/check                            controllers.HasCorrectGoodsController.onSubmitUpdate(mode: Mode = CheckMode, recordId: String)

GET         /update-record/:recordId/categorisation/longer-commodity-code-result                                  controllers.HasCorrectGoodsController.onPageLoadLongerCommodityCode(mode: Mode = NormalMode,recordId: String)
POST        /update-record/:recordId/categorisation/longer-commodity-code-result                                  controllers.HasCorrectGoodsController.onSubmitLongerCommodityCode(mode: Mode = NormalMode,recordId: String)
GET         /update-record/:recordId/categorisation/longer-commodity-code-result/check                            controllers.HasCorrectGoodsController.onPageLoadLongerCommodityCode(mode: Mode = CheckMode,recordId: String)
POST        /update-record/:recordId/categorisation/longer-commodity-code-result/check                            controllers.HasCorrectGoodsController.onSubmitLongerCommodityCode(mode: Mode = CheckMode,recordId: String)

GET         /create-record/goods-description-question                                       controllers.UseTraderReferenceController.onPageLoad(mode: Mode = NormalMode)
POST        /create-record/goods-description-question                                       controllers.UseTraderReferenceController.onSubmit(mode: Mode = NormalMode)
GET         /create-record/goods-description-question/check                                 controllers.UseTraderReferenceController.onPageLoad(mode: Mode = CheckMode)
POST        /create-record/goods-description-question/check                                 controllers.UseTraderReferenceController.onSubmit(mode: Mode = CheckMode)

GET         /create-record/check-your-answers                                               controllers.CyaCreateRecordController.onPageLoad
POST        /create-record/check-your-answers                                               controllers.CyaCreateRecordController.onSubmit

GET         /create-record/trader-reference                                                 controllers.TraderReferenceController.onPageLoadCreate(mode: Mode = NormalMode)
POST        /create-record/trader-reference                                                 controllers.TraderReferenceController.onSubmitCreate(mode: Mode = NormalMode)
GET         /create-record/trader-reference/check                                           controllers.TraderReferenceController.onPageLoadCreate(mode: Mode = CheckMode)
POST        /create-record/trader-reference/check                                           controllers.TraderReferenceController.onSubmitCreate(mode: Mode = CheckMode)

GET         /update-record/:recordId/trader-reference                                       controllers.TraderReferenceController.onPageLoadUpdate(mode: Mode = NormalMode, recordId: String)
POST        /update-record/:recordId/trader-reference                                       controllers.TraderReferenceController.onSubmitUpdate(mode: Mode = NormalMode, recordId: String)
GET         /update-record/:recordId/trader-reference/check                                 controllers.TraderReferenceController.onPageLoadUpdate(mode: Mode = CheckMode, recordId: String)
POST        /update-record/:recordId/trader-reference/check                                 controllers.TraderReferenceController.onSubmitUpdate(mode: Mode = CheckMode, recordId: String)

GET         /update-record/:recordId/categorisation/category-assessment/:index              controllers.AssessmentController.onPageLoad(mode: Mode = NormalMode, recordId: String, index: Int)
POST        /update-record/:recordId/categorisation/category-assessment/:index              controllers.AssessmentController.onSubmit(mode: Mode = NormalMode, recordId: String, index: Int)
GET         /update-record/:recordId/categorisation/category-assessment/:index/check        controllers.AssessmentController.onPageLoad(mode: Mode = CheckMode, recordId: String, index: Int)
POST        /update-record/:recordId/categorisation/category-assessment/:index/check        controllers.AssessmentController.onSubmit(mode: Mode = CheckMode, recordId: String, index: Int)

GET         /create-profile/ukims-kickout                                                   controllers.UkimsKickOutController.onPageLoad()

GET         /update-record/:recordId/categorisation/result/category-1                       controllers.CategorisationResultController.onPageLoad(recordId: String, scenario: Scenario = Category1)
GET         /update-record/:recordId/categorisation/result/category-2                       controllers.CategorisationResultController.onPageLoad(recordId: String, scenario: Scenario = Category2)
GET         /update-record/:recordId/categorisation/result/standard                         controllers.CategorisationResultController.onPageLoad(recordId: String, scenario: Scenario = Standard)
GET         /update-record/:recordId/categorisation/result/category-1-no-exemptions         controllers.CategorisationResultController.onPageLoad(recordId: String, scenario: Scenario = Category1NoExemptions)
GET         /update-record/:recordId/categorisation/result/standard-no-assessments          controllers.CategorisationResultController.onPageLoad(recordId: String, scenario: Scenario = StandardNoAssessments)

GET         /update-record/:recordId/categorisation/check-your-answers                      controllers.CyaCategorisationController.onPageLoad(recordId:String)
POST        /update-record/:recordId/categorisation/check-your-answers                      controllers.CyaCategorisationController.onSubmit(recordId:String)

GET         /update-record/:recordId/create-advice/start                                    controllers.AdviceStartController.onPageLoad(recordId:String)
POST        /update-record/:recordId/create-advice/start                                    controllers.AdviceStartController.onSubmit(recordId:String)

GET         /update-record/:recordId/create-advice/check-your-answers                       controllers.CyaRequestAdviceController.onPageLoad(recordId:String)
POST        /update-record/:recordId/create-advice/check-your-answers                       controllers.CyaRequestAdviceController.onSubmit(recordId:String)

GET         /update-record/:recordId/create-advice/success                                  controllers.AdviceSuccessController.onPageLoad(recordId:String)

GET         /update-record/:recordId/create-advice/email                                    controllers.EmailController.onPageLoad(mode: Mode = NormalMode, recordId:String)
POST        /update-record/:recordId/create-advice/email                                    controllers.EmailController.onSubmit(mode: Mode = NormalMode, recordId:String)
GET         /update-record/:recordId/create-advice/email/check                              controllers.EmailController.onPageLoad(mode: Mode = CheckMode, recordId:String)
POST        /update-record/:recordId/create-advice/email/check                              controllers.EmailController.onSubmit(mode: Mode = CheckMode, recordId:String)

GET         /update-record/:recordId/create-advice/name                                     controllers.NameController.onPageLoad(mode: Mode = NormalMode, recordId: String)
POST        /update-record/:recordId/create-advice/name                                     controllers.NameController.onSubmit(mode: Mode = NormalMode, recordId: String)
GET         /update-record/:recordId/create-advice/name/check                               controllers.NameController.onPageLoad(mode: Mode = CheckMode, recordId: String)
POST        /update-record/:recordId/create-advice/name/check                               controllers.NameController.onSubmit(mode: Mode = CheckMode, recordId: String)

GET         /update-record/:recordId/categorisation/supplementary-unit-question             controllers.HasSupplementaryUnitController.onPageLoad(mode: Mode = NormalMode, recordId: String)
POST        /update-record/:recordId/categorisation/supplementary-unit-question             controllers.HasSupplementaryUnitController.onSubmit(mode: Mode = NormalMode, recordId: String)
GET         /update-record/:recordId/categorisation/supplementary-unit-question/check       controllers.HasSupplementaryUnitController.onPageLoad(mode: Mode = CheckMode, recordId: String)
POST        /update-record/:recordId/categorisation/supplementary-unit-question/check       controllers.HasSupplementaryUnitController.onSubmit(mode: Mode = CheckMode, recordId: String)

GET         /update-record/:recordId/categorisation/supplementary-unit-amount               controllers.SupplementaryUnitController.onPageLoad(mode: Mode = NormalMode, recordId: String)
POST        /update-record/:recordId/categorisation/supplementary-unit-amount               controllers.SupplementaryUnitController.onSubmit(mode: Mode = NormalMode, recordId: String)
GET         /update-record/:recordId/categorisation/supplementary-unit-amount/check         controllers.SupplementaryUnitController.onPageLoad(mode: Mode = CheckMode, recordId: String)
POST        /update-record/:recordId/categorisation/supplementary-unit-amount/check         controllers.SupplementaryUnitController.onSubmit(mode: Mode = CheckMode, recordId: String)

GET        /previous-movement-records                                                       controllers.PreviousMovementRecordsController.onPageLoad()
POST       /previous-movement-records                                                       controllers.PreviousMovementRecordsController.onSubmit()

GET        /update-record/:recordId/categorisation/longer-commodity-code                    controllers.LongerCommodityCodeController.onPageLoad(mode: Mode = NormalMode, recordId: String)
POST       /update-record/:recordId/categorisation/longer-commodity-code                    controllers.LongerCommodityCodeController.onSubmit(mode: Mode = NormalMode, recordId: String)
GET        /update-record/:recordId/categorisation/longer-commodity-code/check              controllers.LongerCommodityCodeController.onPageLoad(mode: Mode = CheckMode, recordId: String)
POST       /update-record/:recordId/categorisation/longer-commodity-code/check              controllers.LongerCommodityCodeController.onSubmit(mode: Mode = CheckMode, recordId: String)

GET         /goods-profile                                                                  controllers.GoodsRecordsController.onPageLoad(page: Int)
POST        /goods-profile                                                                  controllers.GoodsRecordsController.onSearch(page: Int)
GET         /goods-profile/no-record                                                        controllers.GoodsRecordsController.onPageLoadNoRecords()

GET         /remove-record/:recordId/goods-profile                                          controllers.RemoveGoodsRecordController.onPageLoad(recordId: String, location: Location = GoodsProfileLocation)
GET        /remove-record/:recordId/goods-record                                            controllers.RemoveGoodsRecordController.onPageLoad(recordId: String, location: Location = GoodsRecordLocation)
POST       /remove-record/:recordId/goods-profile                                           controllers.RemoveGoodsRecordController.onSubmit(recordId: String, location: Location = GoodsProfileLocation)
POST        /remove-record/:recordId/goods-record                                           controllers.RemoveGoodsRecordController.onSubmit(recordId: String, location: Location = GoodsRecordLocation)

GET         /goods-record/:recordId                                                         controllers.SingleRecordController.onPageLoad(recordId: String)

GET        /update-record/:recordId/change-record-warning/commodity-code                    controllers.HasCommodityCodeChangeController.onPageLoad(mode: Mode = NormalMode, recordId: String)
POST       /update-record/:recordId/change-record-warning/commodity-code                    controllers.HasCommodityCodeChangeController.onSubmit(mode: Mode = NormalMode, recordId: String)
GET        /update-record/:recordId/change-record-warning/commodity-code/check              controllers.HasCommodityCodeChangeController.onPageLoad(mode: Mode = CheckMode, recordId: String)
POST       /update-record/:recordId/change-record-warning/commodity-code/check              controllers.HasCommodityCodeChangeController.onSubmit(mode: Mode = CheckMode, recordId: String)

GET        /update-record/:recordId/change-record-warning/country-of-origin                 controllers.HasCountryOfOriginChangeController.onPageLoad(mode: Mode = NormalMode, recordId: String)
POST       /update-record/:recordId/change-record-warning/country-of-origin                 controllers.HasCountryOfOriginChangeController.onSubmit(mode: Mode = NormalMode, recordId: String)
GET        /update-record/:recordId/change-record-warning/country-of-origin/check           controllers.HasCountryOfOriginChangeController.onPageLoad(mode: Mode = CheckMode, recordId: String)
POST       /update-record/:recordId/change-record-warning/country-of-origin/check           controllers.HasCountryOfOriginChangeController.onSubmit(mode: Mode = CheckMode, recordId: String)

GET        /update-record/:recordId/change-record-warning/goods-description                 controllers.HasGoodsDescriptionChangeController.onPageLoad(mode: Mode = NormalMode, recordId: String)
POST       /update-record/:recordId/change-record-warning/goods-description                 controllers.HasGoodsDescriptionChangeController.onSubmit(mode: Mode = NormalMode, recordId: String)
GET        /update-record/:recordId/change-record-warning/goods-description/check           controllers.HasGoodsDescriptionChangeController.onPageLoad(mode: Mode = CheckMode, recordId: String)
POST       /update-record/:recordId/change-record-warning/goods-description/check           controllers.HasGoodsDescriptionChangeController.onSubmit(mode: Mode = CheckMode, recordId: String)

GET         /update-record/:recordId/check-your-answers/country-of-origin                   controllers.CyaUpdateRecordController.onPageLoadCountryOfOrigin(recordId: String)
POST        /update-record/:recordId/check-your-answers/country-of-origin                   controllers.CyaUpdateRecordController.onSubmitCountryOfOrigin(recordId: String)
GET         /update-record/:recordId/check-your-answers/goods-description                   controllers.CyaUpdateRecordController.onPageLoadGoodsDescription(recordId: String)
POST        /update-record/:recordId/check-your-answers/goods-description                   controllers.CyaUpdateRecordController.onSubmitGoodsDescription(recordId: String)
GET         /update-record/:recordId/check-your-answers/trader-reference                    controllers.CyaUpdateRecordController.onPageLoadTraderReference(recordId: String)
POST        /update-record/:recordId/check-your-answers/trader-reference                    controllers.CyaUpdateRecordController.onSubmitTraderReference(recordId: String)
GET         /update-record/:recordId/check-your-answers/commodity-code                      controllers.CyaUpdateRecordController.onPageLoadCommodityCode(recordId: String)
POST        /update-record/:recordId/check-your-answers/commodity-code                      controllers.CyaUpdateRecordController.onSubmitCommodityCode(recordId: String)
